name: Node.js CI/CD Shop_Ecommerce

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          cache-dependency-path: backend/package-lock.json
          node-version: 22
          cache: "npm"

      - name: Install build-essential
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Create .env file
        run: |
          echo "===TEST==="
          echo "PORT is ${{ vars.PORT }}"
          echo "AWS_BUCKET_ACCESS_KEY is ${{ secrets.AWS_BUCKET_ACCESS_KEY }}"
          echo "===TEST==="

          echo "AWS_BUCKET_ACCESS_KEY=${{ secrets.AWS_BUCKET_ACCESS_KEY }}" >> backend/.env
          echo "AWS_BUCKET_CLOUDFRONT_PRIVATE_KEY_ID=${{ secrets.AWS_BUCKET_CLOUDFRONT_PRIVATE_KEY_ID }}" >> backend/.env
          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> backend/.env
          echo "AWS_BUCKET_SECRET_ACCESS_KEY=${{ secrets.AWS_BUCKET_SECRET_ACCESS_KEY }}" >> backend/.env
          echo "AWS_CLOUDFRONT_PUBLIC_KEY_ID=${{ secrets.AWS_CLOUDFRONT_PUBLIC_KEY_ID }}" >> backend/.env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> backend/.env
          echo "DISCORD_CHANNELID=${{ secrets.DISCORD_CHANNELID }}" >> backend/.env
          echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" >> backend/.env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> backend/.env
          echo "PORT=${{ secrets.PORT }}" >> backend/.env

      - name: Install dependencies
        run: npm ci
        run: pm2 restart shop-ecommerce --interpreter ts-node
        working-directory: backend
        
    # - name: Build
    #   run: npm run build --if-present
    #   working-directory: backend

    # - name: Test
    #   run: npm test
    #   working-directory: backend
